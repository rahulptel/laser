prob:
  name: knapsack
  num_objs: 7
  num_vars: 40
  size: ${prob.num_objs}_${prob.num_vars}
  order: MinWt
  layer_norm_const: 100
  state_norm_const: 1000

train:
  epochs: 3
  from_pid: 0
  to_pid: 10
  inst_per_step: 10
  neg_pos_ratio: 1
  min_samples: 0
  batch_size: 512
  shuffle: true
  verbose: false
  log_dir: train_log
  flag_layer_penalty: true
  # layer in [0, 1], 0 for root and 1 for terminal
  # const:        1
  # linear:       1 - layer
  # linearE:      e^(-0.5 - 1) * layer + 1
  # exponential:  e^(-0.5 - layer)
  # quadratic:    e^(-0.5 - 1) * layer^2 + 1
  # sigmoidal:    (1 + e^(-0.5)) / (1 + e^(layer - 0.5))
  layer_penalty: exponential
  flag_label_penalty: false

val:
  from_pid: 1000
  to_pid: 1010
  neg_pos_ratio: 1
  min_samples: 0
  batch_size: 512
  shuffle: false
  log_dir: val_log
  every: 1


test:
  from_pid: 1100
  to_pid: 1200
  inst_per_step: 10
  # -1 to use all negative samples
  neg_pos_ratio: -1
  min_samples: 0
  batch_size: 512
  shuffle: false
  log_dir: test_log
  best: true
  epoch: false
  epoch_idx: 0

# Prediction task
# classification or regression
pred_task: classification
device: cpu
# Model
mdl:
  # Instance encoder
  ie:
    in_dim: 8
    out_dim: 16
    hidden_dim: 32
  # Context encoder
  ce:
    in_dim: 9
    out_dim: 16
    hidden_dim: 32
  # Parent encoder
  pe:
    in_dim: 2
    out_dim: 16
    hidden_dim: 32
  # Node encoder
  ne:
    - 32
    - 16


# Optimizer
opt:
  name: Adam
  lr: 0.001

# Loss function
loss:
  name: BCELoss

seed: 789541

hydra:
  output_subdir: null
  run:
    dir: .
